{"version":3,"file":"plugin.js","sourceRoot":"","sources":["../../src/plugin.ts"],"names":[],"mappings":"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","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\nimport { Capacitor, registerPlugin } from '@capacitor/core';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nimport type {\n  NativeInterface,\n  InAppBrowserInterface,\n  Dimensions,\n  OpenOptions,\n  NavigationEvent,\n  ErrorCode,\n  ScreenShot,\n  EventListeners,\n  PageLoadStatus,\n} from './definitions';\nconst InAppBrowserPlugin = registerPlugin<NativeInterface>('InAppBrowserPlugin');\n\nexport class InAppBrowserClass implements InAppBrowserInterface {\n  element?: HTMLElement;\n  dimensions?: Dimensions;\n  url?: string;\n  updateDimensionsEvent?: PluginListenerHandle;\n  pageLoadedEvent?: PluginListenerHandle;\n  navigationHandlerEvent?: PluginListenerHandle;\n  pageLoadErrorEvent?: PluginListenerHandle;\n  resizeObserver?: ResizeObserver;\n\n  async openWebView(options: OpenOptions): Promise<void> {\n    if (!(await this.platformCheck())) return;\n    this.element = options.element;\n\n    if (!this.element) {\n      return Promise.reject('pixeltronic-webview: could not bind webview to DOM element. Element is either missing or wrong.');\n    }\n\n    this.setStyleProperties(this.element.style);\n    const dimensions = this.getDimensions(this.element);\n\n    this.resizeObserver = new ResizeObserver(() => {\n      InAppBrowserPlugin.updateDimensions(this.getDimensions(options.element));\n    });\n    this.resizeObserver.observe(this.element);\n\n    await InAppBrowserPlugin.openWebView({\n      url: options.url,\n      headers: options.headers,\n      ...dimensions\n    });\n    this.url = options.url;\n  };\n\n  async closeWebView(): Promise<void> {\n    if (await this.platformCheck()) {\n      this.clearResources();\n      return InAppBrowserPlugin.closeWebView();\n    }\n  };\n\n  showWebView = async (): Promise<void> => {\n    return (await this.platformCheck()) && InAppBrowserPlugin.showWebView();\n  };\n\n  hideWebView = async (): Promise<void> => {\n    return (await this.platformCheck()) && InAppBrowserPlugin.hideWebView();\n  };\n\n  loadUrl = async (options: { url: string }): Promise<void> => {\n    if (await this.platformCheck()) this.url = options.url;\n    await InAppBrowserPlugin.loadUrl(options);\n  };\n\n  reload = async (): Promise<void> => {\n    return (await this.platformCheck()) && InAppBrowserPlugin.refresh();\n  };\n\n  async updateDimensions(dimensions: Dimensions): Promise<void> {\n    return (\n      (await this.platformCheck()) &&\n      (await InAppBrowserPlugin.updateDimensions({\n        ...dimensions,\n        ratio: window.devicePixelRatio,\n      }))\n    );\n  }\n\n  navigateBack = async (): Promise<void> => {\n    return (await this.platformCheck()) && InAppBrowserPlugin.navigateBack();\n  };\n\n  navigateForward = async (): Promise<void> => {\n    return (await this.platformCheck()) && InAppBrowserPlugin.navigateForward();\n  };\n\n  onNavigation = async (\n    listenerFunc: (event: NavigationEvent) => void,\n  ): Promise<void> => {\n    await this.addListener('navigationHandler', (event: any) => {\n      listenerFunc({\n        ...event,\n        complete: (allow: boolean) =>\n          InAppBrowserPlugin.onNavigation({ allow }),\n      });\n    });\n    return Promise.resolve();\n  };\n\n  onPageLoadError = async (\n    listenerFunc: (errorResponse: ErrorCode) => void,\n  ): Promise<void> => this.addListener('pageLoadError', listenerFunc);\n\n  onPageLoaded = async (\n    listenerFunc: (status: PageLoadStatus) => void,\n  ): Promise<void> => this.addListener('pageLoaded', listenerFunc);\n\n  onUpdateDimensions = async (listenerFunc: () => void): Promise<void> =>\n    this.addListener('updateDimensions', listenerFunc);\n\n  captureScreen = async (showScreenCapture: boolean): Promise<void> => {\n    if (!(await this.platformCheck())) return;\n\n    const { width, height, x, y } =\n      this.element.getBoundingClientRect() as DOMRect;\n    this.dimensions = {\n      width: Math.round(width),\n      height: Math.round(height),\n      x: Math.round(x),\n      y: Math.round(y),\n      ratio: window.devicePixelRatio,\n    };\n\n    const result: ScreenShot = await InAppBrowserPlugin.captureScreen(\n      this.dimensions,\n    );\n    if (result?.src) {\n      const webviewEl = this.element;\n      if (webviewEl) {\n        const buffer = await (\n          await fetch('data:image/jpeg;base64,' + result.src)\n        ).arrayBuffer();\n        const blob = new Blob([buffer], { type: 'image/jpeg' });\n        const blobUrl = URL.createObjectURL(blob);\n        const img = new Image();\n\n        img.onload = async () => {\n          if (webviewEl.style) {\n            webviewEl.style.backgroundSize = showScreenCapture\n              ? 'contain'\n              : 'unset';\n            webviewEl.style.backgroundRepeat = showScreenCapture\n              ? 'no-repeat'\n              : 'unset';\n            webviewEl.style.backgroundPosition = showScreenCapture\n              ? 'center center'\n              : 'unset';\n            webviewEl.style.backgroundImage = showScreenCapture\n              ? `url(${blobUrl})`\n              : 'none';\n            return await InAppBrowserPlugin[\n              showScreenCapture ? 'hideWebView' : 'showWebView'\n            ]();\n          }\n        };\n        img.src = blobUrl;\n      }\n    }\n  };\n\n  private addListener = async (\n    listenerEventType: string,\n    listenerFunc: (...args: any[]) => void,\n  ): Promise<void> => {\n    if (!(await this.platformCheck())) return Promise.resolve();\n    await InAppBrowserPlugin.addListener(\n      listenerEventType as EventListeners,\n      listenerFunc,\n    );\n    return Promise.resolve();\n  };\n\n  private setStyleProperties(style: CSSStyleDeclaration) {\n    style.backgroundSize = 'cover';\n    style.backgroundRepeat = 'no-repeat';\n    style.backgroundPosition = 'center';\n  }\n\n  private getDimensions(element: HTMLElement): Dimensions {\n    const { width, height, x, y } = element.getBoundingClientRect() as DOMRect;\n    return {\n      width: Math.round(width),\n      height: Math.round(height),\n      x: Math.round(x),\n      y: Math.round(y),\n      ratio: window.devicePixelRatio\n    };\n  }\n\n  private async platformCheck(): Promise<boolean> {\n    try {\n      return Capacitor.isNativePlatform();\n    } catch (err) {\n      console.error('An error occurred while trying to check the platform.', err);\n      return false;\n    }\n  };\n\n  private async clearResources() {\n    this.element = undefined;\n    this.resizeObserver?.disconnect();\n    this.url = undefined;\n\n    await this.updateDimensionsEvent?.remove();\n    await this.pageLoadedEvent?.remove();\n    await this.navigationHandlerEvent?.remove();\n    await this.pageLoadErrorEvent?.remove();\n  }\n}\n"]}